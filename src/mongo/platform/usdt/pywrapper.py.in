#!/usr/bin/python3

import os
import subprocess
import sys

cpp_rd, py_wr = os.pipe()
py_rd, cpp_wr = os.pipe()

os.set_inheritable(cpp_rd, True)
os.set_inheritable(cpp_wr, True)
os.set_inheritable(py_rd, True)
os.set_inheritable(py_wr, True)

rp = os.path.realpath(__file__)
dn = os.path.dirname(rp)

test_list = '@usdt_probe_tests@'.split()

exec_py_name = os.path.join(dn, 'python_tester/@usdt_probe_test_py@')
print("Running: {}".format(exec_py_name))
py_pr = subprocess.Popen(args=[exec_py_name, str(py_rd), str(py_wr)], executable=exec_py_name, close_fds=False)

for test in test_list:
    exec_cpp_name = os.path.join(dn, test)
    gdb = '/usr/bin/gdb'
    print("args to pass: ", str(cpp_rd), str(cpp_wr))
    print("Running: {}".format(exec_cpp_name))
    try:
        cpp_pr = subprocess.Popen(args=[gdb, exec_cpp_name], executable=gdb, close_fds=False)
        cpp_pr.wait()
    except KeyboardInterrupt:
        cpp_pr.kill()


# clean up py child & pipes
py_pr.kill()
os.close(cpp_wr)
os.close(cpp_rd)
os.close(py_wr)
os.close(py_rd)

print("Done.")
